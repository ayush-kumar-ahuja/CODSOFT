board = [[' ' for _ in range(3)] for _ in range(3)]
def print_board(board):
    for row in board:
        print(' | '.join(row))
        print('---------')

def check_win(board, player):
    for i in range(3):
        if all(board[i][j] == player for j in range(3)) or \
           all(board[j][i] == player for j in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or \
       all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def check_draw(board):
    return all(board[i][j] != ' ' for i in range(3) for j in range(3))

def minimax(board, depth, is_maximizing):
    if check_win(board, 'X'):
        return -1
    if check_win(board, 'O'):
        return 1
    if check_draw(board):
        return 0

    if is_maximizing:
        best_score = -float('inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'O'
                    score = minimax(board, depth + 1, False)
                    board[i][j] = ' '
                    best_score = max(score, best_score)
        return best_score
    else:
        best_score = float('inf')
        for i in range(3):
            for j in range(3):
                if board[i][j] == ' ':
                    board[i][j] = 'X'
                    score = minimax(board, depth + 1, True)
                    board[i][j] = ' '
                    best_score = min(score, best_score)
        return best_score

# AI function
def ai_move(board):
    best_score = -float('inf')
    best_move = None
    for i in range(3):
        for j in range(3):
            if board[i][j] == ' ':
                board[i][j] = 'O'
                score = minimax(board, 0, False)
                board[i][j] = ' '
                if score > best_score:
                    best_score = score
                    best_move = (i, j)
    return best_move

while True:
    print_board(board)
    player_move = input("Enter your move (row, column): ")
    row, col = map(int, player_move.split(','))
    if board[row][col] == ' ':
        board[row][col] = 'X'
    else:
        print("Invalid move. Try again.")
        continue

    if check_win(board, 'X'):
        print_board(board)
        print("You win!")
        break
    if check_draw(board):
        print_board(board)
        print("It's a draw!")
        break

    ai_row, ai_col = ai_move(board)
    board[ai_row][ai_col] = 'O'

    if check_win(board, 'O'):
        print_board(board)
        print("AI wins!")
        break
    if check_draw(board):
        print_board(board)
        print("It's a draw!")
        break

